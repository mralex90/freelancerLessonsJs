// Округдение чисел 

// Проблемма неточных вычислений

let numOne = Math.round(1.005 * 100) / 100; //ожидаем 1.01
console.log(numOne);

let numTwo = 12.35;
console.log(numTwo.toFixed(1));//ожидаем 12.4


let problem = 0.1 + 0.2 === 0.3;
console.log(problem);
console.log(0.1 + 0.2);


/////////////////////////////

// Округление с помощью Number.EPSILON 

let sourseNum = 1.005 + Number.EPSILON;
let numFour = Math.round(sourseNum * 100) / 100;
console.log(numFour);

console.log(sourseNum * 100);
console.log(Math.round(sourseNum * 100));

/* 
В примере есть исходное число 1.005. И мы пытаемся его округлить, в итоге вместо 1.01 мы 
получаем 1, и здесь расписано что же по шагам происходит.
Сначала у нас идет умножение, результат умножения (100.499999...),
соответственно следущий шаг когда мы округляем такое число получаем ровно 100. Поэтому 
результат этого выражения не даст ожидаемого результата, а выведет всего лишь 1.

Решение проблемы: существует такая штука как Number.EPSILON.
Это очень-очень маленькое число и прибавляя его к исходному числу мы решаем нашу проблему.

*/
