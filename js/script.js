// Проверка существования свойства

//Оператор "in"

let userInfo = {
    name: "Oleks",
    age: 30,
    address: {
        city: "Kharkiv",
        street: "123",
    }
}
if ("name" in userInfo) {
    console.log(userInfo.name);
}

/*
С помощью оператора "in" мы тоже можем проверить наличие свойства 
внутри обьекта.
У нас есть обьект и нужно проверить существует ли в нем свойство с именем 
"name". Для этого используем условное ветвление (if), и здесь в круглых 
скобках пишем следущее: 
Во первых нужно указать имя свойства которое хотим проверить.
И имя должно быть указано в кавычках, не зависимо одно это слово или больше.
Далее пишем Оператор "in" и собственно указываем переменную которой 
присвоен данный обьект ( грубо говоря ищем userInfo внутри userInfo).
И если это все возвращает true, то есть это у нас существует, то мы что-то 
выполняем, выводится значение данного свойства. Если такого свойства нет, то 
код не срабатывает.
*/

// Когда использовать Оператор "in"
/*
В большинстве случаев достаточно сравнения с undefined.
Либо опциональная цепочка "?". Что в принципе одно и тоже.

Но есть особый случай, когда свойство существует, 
но содержит значение undefined.
В этом случае необходимо использовать "in".

В примере такой случай.
Если мы будем проверять существование этого свойства с помощью 
проверки на undefined, то такая запись вернет false и код віполнятся не будет.
Хотя такое свойство существует.
Именно в таких случаях нам нужен Оператор "in", потому что при такой проверке 
вернется true - код сработает - вернет значение єтого свойства (undefined)
*/
let userInfo1 = {
    name: undefined,
    // ...Следующие свойства
}
// if (userInfo1.name) { //false
//     console.log(userInfo1.name);    
// }

if ("name" in userInfo1) { // true
    console.log(userInfo1.name);
}
/*

*/