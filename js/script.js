
// Метрики элементов на странице 

// Получаем обьект
const block = document.querySelector('.lesson__block');

// Размеры прокрученной области
// scrollLeft и scrollTop

//block.scrollTop = 150;

const elementScrollLeft = block.scrollLeft;
const elementScrollTop = block.scrollTop;

console.log(elementScrollLeft);
console.log(elementScrollTop);

/*
Эти свойства позволяют получить размеры прокрученной области.

Создаем две константы, обращаемся к нашему блоку, получаем соответствующие 
свойства, выводим в консоль. В данном случае - это ноли, т.к. наш скролл находится 
в верхней позиции. Горизонтального скоролла у нас нет совсем.
НО, эти свойства работяют не только для чтения и мы можем задать изначально 
прокрученную часть. 
Для этого мы обратимся к блоку, напишем scrollTop и укажем значение, например 150, 
Что подразумевает 150рх. Сохраним и увидим, что наш обьект сразу появился уже прокрученным 
на 150рх и получение дальнейших свойств и вывод в консоль нам это подтверждает.
*/

////////////////////////////////////

//scrollBy, scrollTo и scrollIntoView

/*
Стоит добавить, что методы управления прокруткой, о которых говорили ранее, а это scrollBy, scrollTo 
и scrollIntoView работают не только для окна браузера, но и для обьекта на станице у которого есть 
полоса прокрутки.

Пример:
Среди контента есть кнопка, которая при клике будет вызывать эту функцию.
Внутри функции мы обращаемся к нашему блоку, и используем метод "scrollBy",
и, как уже знаем, будет прибавлятся 20рх к текушей проктрутке сверху.
Так же здесь использованы параметры для того, что бы прокрутка была плавной.
*/
function setElementScrollBy(){
    block.scrollBy({
        top: 20,
        left: 0,
        behavior: "smooth"
    })
};

///////////////////////////////////////

/*
ПЕРЕД ТЕМ КАК ПЕРЕЙТИ К КООРДИНАТАМ, СТОИТ ОТМЕТИТЬ, ЧТО ПОЛУЧАТЬ РАЗМЕРЫ ОБЬЕКТА 
СТОИТ КАК РАЗ ТОЛЬКО ЧТО ИЗУЧЕННЫМИ СВОЙСТВАМИ, А НЕ НАПРИМЕР, GETCOMPUTEDSTYLE.
*/