
// DOM
//Навигация по документу

// Получаем обьект body
const bodyElement = document.body;
// Первый и последний дочерние элементы
const firstChildNode = bodyElement.firstChild;
const lastChildNode = bodyElement.lastChild;

console.log(firstChildNode);
console.log(lastChildNode);
/*
Получив обьект БОДИ в некую константу, далее можем использовать именно этот обьект как 
отправную точку для последующей навигации.

В документе, возможно, есть еще "какой-то HTML-код", но на момент выполнения скрипта 
браузер еще до него не дошел.
Поэтому следует размещать скрипт в самом конце документа
*/

////////////////////////////////////////////////////////////////

// Коллекция childNodes содержит список всех детей, включая текстовые узлы.
const childNodes = bodyElement.childNodes;
console.log(childNodes);

// Для проверки наличия дочерних узлов существует также специальная функция hasChildNodes()
console.log(bodyElement.hasChildNodes());/*

Как мы уже видели, childNodes похож на массив. на самом деле это не массив, а коллекция.
Коллекция - особый перебираемый обьект - псевдомассив.

Отличия от массивов:
1.  Для перебора коллекции мы можем использовать for...of
2.  Методы массивов не будут работать, потому что коллекция - это не массив.  */

// Перебор коллекции
for (let node of childNodes) {
    console.log(node); // покажет все узлы из коллекции
}/*

    "Живые" коллекции
Почти все DOM-коллекции, за небольшим исключением, "живые". Другими словами, онеиотражают 
текущее состояние DOM.
Если мы сохраним ссылку на body.childNodes и добавим/удалим узлы в DOM, то они появятся в 
сохраненной коллекции автоматически.
*/

// Только для чтения 
/*
DOM-коллекции, и даже более - все навигационные свойства, перечисленные далее, доступны 
только для чтения. Мы не можем заменить один дочерний узел на другой, просто написав childNodes[i] = ...
Для изменения DOM требуются другие методы.
*/