
// Метод "slice"
// Создает новый, отдельный, массив, в котором копирует часть либо весь массив.
// Синтаксис arr.slice([start], [end]) Не включая [end]

// Копируем часть массива
let arrOne = ['Aleks', 'Ivan', 'Olya',];

// Начиная с 1й позиции "", до 2й не включая "" (не включая)
let arrTwo = arrOne.slice(1, 2);
console.log(arrTwo);

// Начиная с пердпоследней позиции "", до последней "" (не включая)
let arrThree = arrOne.slice(-2, -1);
console.log(arrThree);

// Копируем весь массив
let arrFour = arrOne.slice();
console.log(arrFour);/*

У нас есть массив, присвоен он в переменную, дальше мы обращаемся к этой переменной, 
ставим точку, пишем "slice" и в () пишем вледущее: сначала стартовую позицию ( с 
которой начнется копирование) и конечную позицию (которой закончится копирование, но не включая ее).

Также можно использовать и итрицательное значение. В этои случае будет движение справа налево.

Если просто нужно сделать дубль массива, скопоровать весь массив, то никакие значения внутри () не указываем.
Таким образом просто получим дубль массива.
*/


///////////////////////////

// Метод concat
/*
Создает новый массив, в который копирует данные из других массивов 
и дополнительные значения (в конец массива).
Синтаксис arr.concat(arg1, arg2 ...) */

let arr2 = ['Oleks', 'Ivan', 'Olya',];
let arr21 = arr2.concat('Vlad');
console.log(arr21);/*

Этот метод не просто создаст дубль, он еще и может дополнить новый массив некоторыми значениями.

Есть массив, присвоен он в переменную, мы создаем новую переменную и присваиваем следущее: обращаемся 
к переменной исхоного массива, точка, "concat" и в () еще дописываем что-нибудь, например строку.Также мы можем 
через зпт написать сколько угодно значений.
В итоге выведа в консоль новую переменную получим новый массив, но дополненный новым значением.
*/
