
// DOM

// Поиск произвольного элемента

/*
querySelectorAll - будет содержать информацию на момент когда мы вызвали этот поиск.
а getElementsBy... - возвращает "живую" коллекцию, т.е. при изменении на лету ДОМ-дерева, она будет
содержать в себе актуальную информацию.
*/

// Получаем статическую коллекцию 
const listStatic = document.querySelectorAll('.lesson__item-list');/*

*/

// Получаем "живую " колллекцию
const listLive = document.getElementsByClassName('lesson__item-list');

console.log(listStatic);
console.log(listLive);


// Создаем новый HTML-обьект
const lessonList = document.querySelector('.lesson__list');
lessonList.insertAdjacentHTML(
    "beforeend",
    '<li class="lesson__item-list">Новый пункт</li>'
);
/*
С помощью этого кода добавляем еще один обьект с таким же классом. 
Проверяем статическую коллекцию - видим, что количество обьектов не изменилось. Новый пункт не попал в список.

Теперь "живую" коллекцию - новый пункт уже здесь. Коллекция содержит актуальную информацию о ДОМ-дереве.
*/


const elems5 = document.querySelectorAll('.class');

/*
На практике чаще всего используется querySelectorAll, так как мы можем указать абсолютно любой css-селектор.
Другие методы поиска используются только тогда, когда нужны уникальные возможности, например получение одного обьекта 
либо получение "живой" коллекции.
*/
