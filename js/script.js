//  СИНТАКСИС

// Имена свойств

// Имя из двух и больше слов
// let userInfo = {
//     name: "Aleks",
//     age: 30,
//     "likes javascript": true,
// };
// console.log(userInfo.name);
// console.log(userInfo.['name']);
// console.log(userInfo["likes javascript"]);

/*
Такое имя стоит закрыть в кавычки, также существует разница при получении 
значений такого имени-свойства.
Как мы получаем значение свойства когда имя состоит из одного слова:
мы пишем имя переменной которой присвоен обьект, далее точка и имя свойства.
Но когда имя свойства состоит из двух+ слов, то синтаксис меняется.
Опять же у нас имя переменной, которой присвоен обьект, далее мы 
внутри квадратных скобок, в кавычках указываем такое имя свойства 
состоящее из двух+ слов. Именно в этом случае мы получим корректно значение 
данного свойства.

Стоит отметить, что даже обычное значение свойства можно получать с помощью 
квадратных скобок и кавычек, причем тип кавычек значения не имеет.
*/


/////  Вычисляемое либо передаваемое имя 

// Вычисляем имя
// let firstPart = "likes";
// let userInfo = {
//     name: "Aleks",
//     age: 30,
//     [firstPart + " javascript"]: true,
// };
// console.log(userInfo["likes javascript"]);

/*
Чтобы вычислить имя свойства мы можем составить пдобную конструкцию:
Сначала обьявить переменную, присвоить ей строку, и внутри обьекта 
с помощью квадратных скобок и оператора "+" мы можем вычислить, т.е. 
составить нужное нам имя свойства. И дальше по привычной схеме получить 
его значение.
*/


///// Передаем имя
let firstPart = "likes";
let userInfo = {
    name: "Aleks",
    age: 30,
    [firstPart]: true,
};
console.log(userInfo[firstPart]);

//Преимущество квадратных скобок
let key = "name";
console.log(userInfo[key]);

/*
Соответсвенно еще проще мы можем просто передать имя свойства. Для 
этого опять же обьявляем переменную с некой строкой и внутри обьекта 
в квадратных скобках мы используем имя этой переменной. Более того, получить 
значение данного свойства мы теперь можем по имени этой перемнной.
В итоге вся эта конструкция отлично работает и мы получаем значение этого свойства.

Так в чем же преимущество именно квадратных скобок?
Смотрим на пример.
Мы можем обьявит переменную с именем свойства и далее с помощью квадратных скобок 
получить значение.
В переменную помещаем имя свойства "name", и выводит в консоль значение 
этого свойства. В тоже время через точку не получится этого сделать - будет "undefined".
Такого имени в этом обьекте не существует. По этому использование квадратных скобок 
расширяет возможности.
*/

///// Зарезервированные слова в именах
let userInfo1 = {
    let: "Aleks",
    for: 30,
};
console.log(userInfo1.let);
console.log(userInfo1.for);

/*
В качестве имен переменной мы не можем использовать специальные  зарезервирование слова.
Имена свойств внутри обьектов не поддаются этому правилу, т.е. здесь 
мы можем указывать эти зарезервированые слова и все будет работать.
*/ 


//////// Имена = строки либо символы

let userInfo2 = {
    0: "Aleks", // 0 тоже самое что "0"
};
console.log(userInfo2[0]);  // 1)
console.log(userInfo2["0"]);  // 2)
/*
Стоит отметить, что в качестве имени свойства может быть либо строка либо символ, 
т.е. даже запишем цифру 0, то на самом деле это строка 0.
Вызвать значение такого свойства мы можем или первым образом или вторым. 
*/